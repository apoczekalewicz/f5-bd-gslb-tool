- hosts: localhost
  gather_facts: no
  vars:
    API_DOMAIN: sandbox302.opentlc.com
    #APP_NAME: pacman
    #PROJECT_NAME: pacman-app
  vars_files:
    # - "vars/credentials.yaml"
    - "vars/setup.yaml"
    #- "vars/gslbState.desired.yaml"

  pre_tasks:
    - debug: msg="BASE_DOMAIN={{BASE_DOMAIN}}"

    # - name: Pip install dependencies
    #   pip:
    #     name:
    #     - setuptools
    #     - certifi
    #     - dnspython
    #     - dig
    #     # - kubernetes
    #     # - openshift
    #     extra_args: --upgrade --user

    - debug: msg="Lookup IPs"
    - name: Generate apiEndpoint URLs
      set_fact:
        apiEndpoint: "{{ apiEndpoint|default({}) | combine({ item: 'https://api.'+ item + '.' + API_DOMAIN + ':6443' }) }}"
      loop: "{{target_clusters}}"
    - debug: msg="{{apiEndpoint}}"

    - name: Retrieve publicAddress for AWS
      set_fact:
        #publicAddress: "{{ publicAddress|default({}) | combine({ item: { 'az1': lookup('dig', 'multicloud-console.apps.'+item+'.demo.red-chesterfield.com').split(',')[0], 'az2': lookup('dig', 'multicloud-console.apps.'+item+'.demo.red-chesterfield.com').split(',')[1]} }) }}"
        publicAddress: "{{ publicAddress|default({}) | combine({ item: { 'az1': lookup('dig', 'console-openshift-console.apps.'+item+'.'+BASE_AWS_DOMAIN).split(',')[0]} }) }}"
      loop: "{{target_clusters}}"
      when: lookup('dig', 'console-openshift-console.apps.'+item+'.'+BASE_AWS_DOMAIN).split(',')[0] != 'NXDOMAIN'

        #    - name: Retrieve publicAddress (apoczeka)
      #      set_fact:
        #        publicAddress: "{{ publicAddress|default({}) | combine({ 'ocp1': { 'az1': lookup('dig', 'console-openshift-console.apps.qyt1tahi.eastus.aroapp.io').split(',')[0]} }) }}"
          #      loop: "{{target_clusters}}"
        #      when: lookup('dig', 'console-openshift-console.apps.'+item+'.'+BASE_DOMAIN).split(',')[0] != 'NXDOMAIN'


    - name: Retrieve publicAddress for GCP
      set_fact:
        publicAddress: "{{ publicAddress|default({}) | combine({ item: { 'az1': lookup('dig', 'console-openshift-console.apps.'+item+'.'+BASE_GCP_DOMAIN).split(',')[0]} }) }}"
      loop: "{{target_clusters}}"
      when: lookup('dig', 'console-openshift-console.apps.'+item+'.'+BASE_GCP_DOMAIN).split(',')[0] != 'NXDOMAIN'

    - name: Retrieve publicAddress for Azure
      set_fact:
        publicAddress: "{{ publicAddress|default({}) | combine({ item: { 'az1': lookup('dig', 'console-openshift-console.apps.'+item+'.'+BASE_AZ_DOMAIN).split(',')[0]} }) }}"
      loop: "{{target_clusters}}"
      when: lookup('dig', 'console-openshift-console.apps.'+item+'.'+BASE_AZ_DOMAIN).split(',')[0] != 'NXDOMAIN'

    - debug: msg="{{publicAddress}}"

    - name: "Reset gslbState.desired.yaml"
      shell: |
        echo "gslbState: []" > vars/gslbState.desired.yaml
      args:
        executable: /bin/bash
  roles:
    - f5aas-gslb-add-retrieved-routes
    - role: f5aas-gslb-prepare-subscription
    - role: f5aas-gslb-login
    - role: f5aas-gslb-get-account-details
    - role: f5aas-gslb-publish-subscription
    - role: f5aas-gslb-logout



